(
 (rule _empty "0" (seq))
 (rule QueryUnit (cleanup opt) (alt _empty Query))
 (rule Query (seq Prologue _Query_1))
 (rule _Query_1 (alt SelectQuery ConstructQuery DescribeQuery AskQuery))
 (rule UpdateUnit (seq Update))
 (rule Prologue (cleanup star) (alt _empty _Prologue_2))
 (rule _Prologue_2 (cleanup merge) (seq _Prologue_1 Prologue))
 (rule _Prologue_1 (alt BaseDecl PrefixDecl))
 (rule BaseDecl (seq 'BASE' IRIREF))
 (rule PrefixDecl (seq 'PREFIX' PNAME_NS IRIREF))
 (rule SelectQuery
  (seq SelectClause _SelectQuery_1 WhereClause SolutionModifier ValuesClause))
 (rule _SelectQuery_1 (cleanup star) (alt _empty _SelectQuery_2))
 (rule _SelectQuery_2 (cleanup merge) (seq DatasetClause _SelectQuery_1))
 (rule SubSelect (seq SelectClause WhereClause SolutionModifier ValuesClause))
 (rule SelectClause (seq 'SELECT' _SelectClause_1 _SelectClause_2))
 (rule _SelectClause_1 (cleanup opt) (alt _empty _SelectClause_3))
 (rule _SelectClause_3 (alt 'DISTINCT' 'REDUCED'))
 (rule _SelectClause_2 (alt _SelectClause_4 '*'))
 (rule _SelectClause_4 (cleanup plus) (seq _SelectClause_5 _SelectClause_6))
 (rule _SelectClause_6 (cleanup star) (alt _empty _SelectClause_7))
 (rule _SelectClause_7 (cleanup merge) (seq _SelectClause_5 _SelectClause_6))
 (rule _SelectClause_5 (alt Var _SelectClause_8))
 (rule _SelectClause_8 (seq '(' Expression 'AS' Var ')'))
 (rule ConstructQuery (seq 'CONSTRUCT' _ConstructQuery_1 ValuesClause))
 (rule _ConstructQuery_1 (alt _ConstructQuery_2 _ConstructQuery_3))
 (rule _ConstructQuery_2
  (seq ConstructTemplate _ConstructQuery_4 WhereClause SolutionModifier))
 (rule _ConstructQuery_4 (cleanup star) (alt _empty _ConstructQuery_5))
 (rule _ConstructQuery_5 (cleanup merge) (seq DatasetClause _ConstructQuery_4))
 (rule _ConstructQuery_3
  (seq _ConstructQuery_6 'WHERE' '{' _ConstructQuery_7 '}' SolutionModifier))
 (rule _ConstructQuery_6 (cleanup star) (alt _empty _ConstructQuery_8))
 (rule _ConstructQuery_8 (cleanup merge) (seq DatasetClause _ConstructQuery_6))
 (rule _ConstructQuery_7 (cleanup opt) (alt _empty TriplesTemplate))
 (rule DescribeQuery
  (seq 'DESCRIBE' _DescribeQuery_1 _DescribeQuery_2 _DescribeQuery_3
   SolutionModifier ValuesClause ))
 (rule _DescribeQuery_1 (alt _DescribeQuery_4 '*'))
 (rule _DescribeQuery_4 (cleanup plus) (seq VarOrIri _DescribeQuery_5))
 (rule _DescribeQuery_5 (cleanup star) (alt _empty _DescribeQuery_6))
 (rule _DescribeQuery_6 (cleanup merge) (seq VarOrIri _DescribeQuery_5))
 (rule _DescribeQuery_2 (cleanup star) (alt _empty _DescribeQuery_7))
 (rule _DescribeQuery_7 (cleanup merge) (seq DatasetClause _DescribeQuery_2))
 (rule _DescribeQuery_3 (cleanup opt) (alt _empty WhereClause))
 (rule AskQuery (seq 'ASK' _AskQuery_1 WhereClause SolutionModifier ValuesClause))
 (rule _AskQuery_1 (cleanup star) (alt _empty _AskQuery_2))
 (rule _AskQuery_2 (cleanup merge) (seq DatasetClause _AskQuery_1))
 (rule DatasetClause (seq 'FROM' _DatasetClause_1))
 (rule _DatasetClause_1 (alt DefaultGraphClause NamedGraphClause))
 (rule DefaultGraphClause (seq SourceSelector))
 (rule NamedGraphClause (seq 'NAMED' SourceSelector))
 (rule SourceSelector (seq iri))
 (rule WhereClause (seq _WhereClause_1 GroupGraphPattern))
 (rule _WhereClause_1 (cleanup opt) (alt _empty 'WHERE'))
 (rule SolutionModifier
  (seq _SolutionModifier_1 _SolutionModifier_2 _SolutionModifier_3
   _SolutionModifier_4 ))
 (rule _SolutionModifier_1 (cleanup opt) (alt _empty GroupClause))
 (rule _SolutionModifier_2 (cleanup opt) (alt _empty HavingClause))
 (rule _SolutionModifier_3 (cleanup opt) (alt _empty OrderClause))
 (rule _SolutionModifier_4 (cleanup opt) (alt _empty LimitOffsetClauses))
 (rule GroupClause (seq 'GROUP' 'BY' _GroupClause_1))
 (rule _GroupClause_1 (cleanup plus) (seq GroupCondition _GroupClause_2))
 (rule _GroupClause_2 (cleanup star) (alt _empty _GroupClause_3))
 (rule _GroupClause_3 (cleanup merge) (seq GroupCondition _GroupClause_2))
 (rule GroupCondition (alt BuiltInCall FunctionCall _GroupCondition_1 Var))
 (rule _GroupCondition_1 (seq '(' Expression _GroupCondition_2 ')'))
 (rule _GroupCondition_2 (cleanup opt) (alt _empty _GroupCondition_3))
 (rule _GroupCondition_3 (seq 'AS' Var))
 (rule HavingClause (seq 'HAVING' _HavingClause_1))
 (rule _HavingClause_1 (cleanup plus) (seq HavingCondition _HavingClause_2))
 (rule _HavingClause_2 (cleanup star) (alt _empty _HavingClause_3))
 (rule _HavingClause_3 (cleanup merge) (seq HavingCondition _HavingClause_2))
 (rule HavingCondition (seq Constraint))
 (rule OrderClause (seq 'ORDER' 'BY' _OrderClause_1))
 (rule _OrderClause_1 (cleanup plus) (seq OrderCondition _OrderClause_2))
 (rule _OrderClause_2 (cleanup star) (alt _empty _OrderClause_3))
 (rule _OrderClause_3 (cleanup merge) (seq OrderCondition _OrderClause_2))
 (rule OrderCondition (alt _OrderCondition_1 _OrderCondition_2))
 (rule _OrderCondition_1 (seq _OrderCondition_3 BrackettedExpression))
 (rule _OrderCondition_3 (alt 'ASC' 'DESC'))
 (rule _OrderCondition_2 (alt Constraint Var))
 (rule LimitOffsetClauses (alt _LimitOffsetClauses_1 _LimitOffsetClauses_2))
 (rule _LimitOffsetClauses_1 (seq LimitClause _LimitOffsetClauses_3))
 (rule _LimitOffsetClauses_3 (cleanup opt) (alt _empty OffsetClause))
 (rule _LimitOffsetClauses_2 (seq OffsetClause _LimitOffsetClauses_4))
 (rule _LimitOffsetClauses_4 (cleanup opt) (alt _empty LimitClause))
 (rule LimitClause (seq 'LIMIT' INTEGER))
 (rule OffsetClause (seq 'OFFSET' INTEGER))
 (rule ValuesClause (cleanup opt) (alt _empty _ValuesClause_1))
 (rule _ValuesClause_1 (seq 'VALUES' DataBlock))
 (rule Update (seq Prologue _Update_1))
 (rule _Update_1 (cleanup opt) (alt _empty _Update_2))
 (rule _Update_2 (seq Update1 _Update_3))
 (rule _Update_3 (cleanup opt) (alt _empty _Update_4))
 (rule _Update_4 (seq ';' Update))
 (rule Update1
  (alt Load Clear Drop Add Move Copy Create DeleteWhere Modify InsertData
   DeleteData ))
 (rule Load (seq 'LOAD' _Load_1 iri _Load_2))
 (rule _Load_1 (cleanup opt) (alt _empty 'SILENT'))
 (rule _Load_2 (cleanup opt) (alt _empty _Load_3))
 (rule _Load_3 (seq 'INTO' GraphRef))
 (rule Clear (seq 'CLEAR' _Clear_1 GraphRefAll))
 (rule _Clear_1 (cleanup opt) (alt _empty 'SILENT'))
 (rule Drop (seq 'DROP' _Drop_1 GraphRefAll))
 (rule _Drop_1 (cleanup opt) (alt _empty 'SILENT'))
 (rule Create (seq 'CREATE' _Create_1 GraphRef))
 (rule _Create_1 (cleanup opt) (alt _empty 'SILENT'))
 (rule Add (seq 'ADD' _Add_1 GraphOrDefault 'TO' GraphOrDefault))
 (rule _Add_1 (cleanup opt) (alt _empty 'SILENT'))
 (rule Move (seq 'MOVE' _Move_1 GraphOrDefault 'TO' GraphOrDefault))
 (rule _Move_1 (cleanup opt) (alt _empty 'SILENT'))
 (rule Copy (seq 'COPY' _Copy_1 GraphOrDefault 'TO' GraphOrDefault))
 (rule _Copy_1 (cleanup opt) (alt _empty 'SILENT'))
 (rule InsertData (seq 'INSERT DATA' QuadData))
 (rule DeleteData (seq 'DELETE DATA' QuadData))
 (rule DeleteWhere (seq 'DELETE WHERE' QuadPattern))
 (rule Modify (seq _Modify_1 _Modify_2 _Modify_3 'WHERE' GroupGraphPattern))
 (rule _Modify_1 (cleanup opt) (alt _empty _Modify_4))
 (rule _Modify_4 (seq 'WITH' iri))
 (rule _Modify_2 (alt _Modify_5 InsertClause))
 (rule _Modify_5 (seq DeleteClause _Modify_6))
 (rule _Modify_6 (cleanup opt) (alt _empty InsertClause))
 (rule _Modify_3 (cleanup star) (alt _empty _Modify_7))
 (rule _Modify_7 (cleanup merge) (seq UsingClause _Modify_3))
 (rule DeleteClause (seq 'DELETE' QuadPattern))
 (rule InsertClause (seq 'INSERT' QuadPattern))
 (rule UsingClause (seq 'USING' _UsingClause_1))
 (rule _UsingClause_1 (alt iri _UsingClause_2))
 (rule _UsingClause_2 (seq 'NAMED' iri))
 (rule GraphOrDefault (alt 'DEFAULT' _GraphOrDefault_1))
 (rule _GraphOrDefault_1 (seq _GraphOrDefault_2 iri))
 (rule _GraphOrDefault_2 (cleanup opt) (alt _empty 'GRAPH'))
 (rule GraphRef (seq 'GRAPH' iri))
 (rule GraphRefAll (alt GraphRef 'DEFAULT' 'NAMED' 'ALL'))
 (rule QuadPattern (seq '{' Quads '}'))
 (rule QuadData (seq '{' Quads '}'))
 (rule Quads (seq _Quads_1 _Quads_2))
 (rule _Quads_1 (cleanup opt) (alt _empty TriplesTemplate))
 (rule _Quads_2 (cleanup star) (alt _empty _Quads_4))
 (rule _Quads_4 (cleanup merge) (seq _Quads_3 _Quads_2))
 (rule _Quads_3 (seq QuadsNotTriples _Quads_5 _Quads_6))
 (rule _Quads_5 (cleanup opt) (alt _empty '.'))
 (rule _Quads_6 (cleanup opt) (alt _empty TriplesTemplate))
 (rule QuadsNotTriples (seq 'GRAPH' VarOrIri '{' _QuadsNotTriples_1 '}'))
 (rule _QuadsNotTriples_1 (cleanup opt) (alt _empty TriplesTemplate))
 (rule TriplesTemplate (seq TriplesSameSubject _TriplesTemplate_1))
 (rule _TriplesTemplate_1 (cleanup opt) (alt _empty _TriplesTemplate_2))
 (rule _TriplesTemplate_2 (seq '.' _TriplesTemplate_3))
 (rule _TriplesTemplate_3 (cleanup opt) (alt _empty TriplesTemplate))
 (rule GroupGraphPattern (seq '{' _GroupGraphPattern_1 '}'))
 (rule _GroupGraphPattern_1 (alt SubSelect GroupGraphPatternSub))
 (rule GroupGraphPatternSub (seq _GroupGraphPatternSub_1 _GroupGraphPatternSub_2))
 (rule _GroupGraphPatternSub_1 (cleanup opt) (alt _empty TriplesBlock))
 (rule _GroupGraphPatternSub_2 (cleanup star) (alt _empty _GroupGraphPatternSub_4))
 (rule _GroupGraphPatternSub_4
  (cleanup merge)
  (seq _GroupGraphPatternSub_3 _GroupGraphPatternSub_2))
 (rule _GroupGraphPatternSub_3
  (seq GraphPatternNotTriples _GroupGraphPatternSub_5 _GroupGraphPatternSub_6))
 (rule _GroupGraphPatternSub_5 (cleanup opt) (alt _empty '.'))
 (rule _GroupGraphPatternSub_6 (cleanup opt) (alt _empty TriplesBlock))
 (rule TriplesBlock (seq TriplesSameSubjectPath _TriplesBlock_1))
 (rule _TriplesBlock_1 (cleanup opt) (alt _empty _TriplesBlock_2))
 (rule _TriplesBlock_2 (seq '.' _TriplesBlock_3))
 (rule _TriplesBlock_3 (cleanup opt) (alt _empty TriplesBlock))
 (rule ReifiedTripleBlock (seq ReifiedTriple PropertyList))
 (rule ReifiedTripleBlockPath (seq ReifiedTriple PropertyListPath))
 (rule GraphPatternNotTriples
  (alt GroupOrUnionGraphPattern OptionalGraphPattern MinusGraphPattern
   GraphGraphPattern ServiceGraphPattern Filter Bind InlineData ))
 (rule OptionalGraphPattern (seq 'OPTIONAL' GroupGraphPattern))
 (rule GraphGraphPattern (seq 'GRAPH' VarOrIri GroupGraphPattern))
 (rule ServiceGraphPattern
  (seq 'SERVICE' _ServiceGraphPattern_1 VarOrIri GroupGraphPattern))
 (rule _ServiceGraphPattern_1 (cleanup opt) (alt _empty 'SILENT'))
 (rule Bind (seq 'BIND' '(' Expression 'AS' Var ')'))
 (rule InlineData (seq 'VALUES' DataBlock))
 (rule DataBlock (alt InlineDataOneVar InlineDataFull))
 (rule InlineDataOneVar (seq Var '{' _InlineDataOneVar_1 '}'))
 (rule _InlineDataOneVar_1 (cleanup star) (alt _empty _InlineDataOneVar_2))
 (rule _InlineDataOneVar_2 (cleanup merge) (seq DataBlockValue _InlineDataOneVar_1))
 (rule InlineDataFull (seq _InlineDataFull_1 '{' _InlineDataFull_2 '}'))
 (rule _InlineDataFull_1 (alt NIL _InlineDataFull_3))
 (rule _InlineDataFull_3 (seq '(' _InlineDataFull_4 ')'))
 (rule _InlineDataFull_4 (cleanup star) (alt _empty _InlineDataFull_5))
 (rule _InlineDataFull_5 (cleanup merge) (seq Var _InlineDataFull_4))
 (rule _InlineDataFull_2 (cleanup star) (alt _empty _InlineDataFull_7))
 (rule _InlineDataFull_7 (cleanup merge) (seq _InlineDataFull_6 _InlineDataFull_2))
 (rule _InlineDataFull_6 (alt _InlineDataFull_8 NIL))
 (rule _InlineDataFull_8 (seq '(' _InlineDataFull_9 ')'))
 (rule _InlineDataFull_9 (cleanup star) (alt _empty _InlineDataFull_10))
 (rule _InlineDataFull_10 (cleanup merge) (seq DataBlockValue _InlineDataFull_9))
 (rule DataBlockValue
  (alt iri RDFLiteral NumericLiteral BooleanLiteral 'UNDEF' TripleTermData))
 (rule Reifier (seq '~' _Reifier_1))
 (rule _Reifier_1 (cleanup opt) (alt _empty VarOrReifierId))
 (rule VarOrReifierId (alt Var iri BlankNode))
 (rule MinusGraphPattern (seq 'MINUS' GroupGraphPattern))
 (rule GroupOrUnionGraphPattern (seq GroupGraphPattern _GroupOrUnionGraphPattern_1))
 (rule _GroupOrUnionGraphPattern_1
  (cleanup star)
  (alt _empty _GroupOrUnionGraphPattern_3))
 (rule _GroupOrUnionGraphPattern_3
  (cleanup merge)
  (seq _GroupOrUnionGraphPattern_2 _GroupOrUnionGraphPattern_1))
 (rule _GroupOrUnionGraphPattern_2 (seq 'UNION' GroupGraphPattern))
 (rule Filter (seq 'FILTER' Constraint))
 (rule Constraint (alt BrackettedExpression BuiltInCall FunctionCall))
 (rule FunctionCall (seq iri ArgList))
 (rule ArgList (alt NIL _ArgList_1))
 (rule _ArgList_1 (seq '(' _ArgList_2 Expression _ArgList_3 ')'))
 (rule _ArgList_2 (cleanup opt) (alt _empty 'DISTINCT'))
 (rule _ArgList_3 (cleanup star) (alt _empty _ArgList_5))
 (rule _ArgList_5 (cleanup merge) (seq _ArgList_4 _ArgList_3))
 (rule _ArgList_4 (seq ',' Expression))
 (rule ExpressionList (alt NIL _ExpressionList_1))
 (rule _ExpressionList_1 (seq '(' Expression _ExpressionList_2 ')'))
 (rule _ExpressionList_2 (cleanup star) (alt _empty _ExpressionList_4))
 (rule _ExpressionList_4 (cleanup merge) (seq _ExpressionList_3 _ExpressionList_2))
 (rule _ExpressionList_3 (seq ',' Expression))
 (rule ConstructTemplate (seq '{' _ConstructTemplate_1 '}'))
 (rule _ConstructTemplate_1 (cleanup opt) (alt _empty ConstructTriples))
 (rule ConstructTriples (seq TriplesSameSubject _ConstructTriples_1))
 (rule _ConstructTriples_1 (cleanup opt) (alt _empty _ConstructTriples_2))
 (rule _ConstructTriples_2 (seq '.' _ConstructTriples_3))
 (rule _ConstructTriples_3 (cleanup opt) (alt _empty ConstructTriples))
 (rule TriplesSameSubject
  (alt _TriplesSameSubject_1 _TriplesSameSubject_2 ReifiedTripleBlock))
 (rule _TriplesSameSubject_1 (seq VarOrTerm PropertyListNotEmpty))
 (rule _TriplesSameSubject_2 (seq TriplesNode PropertyList))
 (rule PropertyList (cleanup opt) (alt _empty PropertyListNotEmpty))
 (rule PropertyListNotEmpty (seq Verb ObjectList _PropertyListNotEmpty_1))
 (rule _PropertyListNotEmpty_1 (cleanup star) (alt _empty _PropertyListNotEmpty_3))
 (rule _PropertyListNotEmpty_3
  (cleanup merge)
  (seq _PropertyListNotEmpty_2 _PropertyListNotEmpty_1))
 (rule _PropertyListNotEmpty_2 (seq ';' _PropertyListNotEmpty_4))
 (rule _PropertyListNotEmpty_4 (cleanup opt) (alt _empty _PropertyListNotEmpty_5))
 (rule _PropertyListNotEmpty_5 (seq Verb ObjectList))
 (rule Verb (alt VarOrIri 'a'))
 (rule ObjectList (seq Object _ObjectList_1))
 (rule _ObjectList_1 (cleanup star) (alt _empty _ObjectList_3))
 (rule _ObjectList_3 (cleanup merge) (seq _ObjectList_2 _ObjectList_1))
 (rule _ObjectList_2 (seq ',' Object))
 (rule Object (seq GraphNode Annotation))
 (rule TriplesSameSubjectPath
  (alt _TriplesSameSubjectPath_1 _TriplesSameSubjectPath_2 ReifiedTripleBlockPath))
 (rule _TriplesSameSubjectPath_1 (seq VarOrTerm PropertyListPathNotEmpty))
 (rule _TriplesSameSubjectPath_2 (seq TriplesNodePath PropertyListPath))
 (rule PropertyListPath (cleanup opt) (alt _empty PropertyListPathNotEmpty))
 (rule PropertyListPathNotEmpty
  (seq _PropertyListPathNotEmpty_1 ObjectListPath _PropertyListPathNotEmpty_2))
 (rule _PropertyListPathNotEmpty_1 (alt VerbPath VerbSimple))
 (rule _PropertyListPathNotEmpty_2
  (cleanup star)
  (alt _empty _PropertyListPathNotEmpty_4))
 (rule _PropertyListPathNotEmpty_4
  (cleanup merge)
  (seq _PropertyListPathNotEmpty_3 _PropertyListPathNotEmpty_2))
 (rule _PropertyListPathNotEmpty_3 (seq ';' _PropertyListPathNotEmpty_5))
 (rule _PropertyListPathNotEmpty_5
  (cleanup opt)
  (alt _empty _PropertyListPathNotEmpty_6))
 (rule _PropertyListPathNotEmpty_6 (seq _PropertyListPathNotEmpty_7 ObjectListPath))
 (rule _PropertyListPathNotEmpty_7 (alt VerbPath VerbSimple))
 (rule VerbPath (seq Path))
 (rule VerbSimple (seq Var))
 (rule ObjectListPath (seq ObjectPath _ObjectListPath_1))
 (rule _ObjectListPath_1 (cleanup star) (alt _empty _ObjectListPath_3))
 (rule _ObjectListPath_3 (cleanup merge) (seq _ObjectListPath_2 _ObjectListPath_1))
 (rule _ObjectListPath_2 (seq ',' ObjectPath))
 (rule ObjectPath (seq GraphNodePath AnnotationPath))
 (rule Path (seq PathAlternative))
 (rule PathAlternative (seq PathSequence _PathAlternative_1))
 (rule _PathAlternative_1 (cleanup star) (alt _empty _PathAlternative_3))
 (rule _PathAlternative_3 (cleanup merge) (seq _PathAlternative_2 _PathAlternative_1))
 (rule _PathAlternative_2 (seq '|' PathSequence))
 (rule PathSequence (seq PathEltOrInverse _PathSequence_1))
 (rule _PathSequence_1 (cleanup star) (alt _empty _PathSequence_3))
 (rule _PathSequence_3 (cleanup merge) (seq _PathSequence_2 _PathSequence_1))
 (rule _PathSequence_2 (seq '/' PathEltOrInverse))
 (rule PathElt (seq PathPrimary _PathElt_1))
 (rule _PathElt_1 (cleanup opt) (alt _empty PathMod))
 (rule PathEltOrInverse (alt PathElt _PathEltOrInverse_1))
 (rule _PathEltOrInverse_1 (seq '^' PathElt))
 (rule PathMod (alt '?' '*' '+' _PathMod_1))
 (rule _PathMod_1 (seq '{' _PathMod_2 _PathMod_3 '}'))
 (rule _PathMod_2 (cleanup opt) (alt _empty INTEGER))
 (rule _PathMod_3 (cleanup opt) (alt _empty _PathMod_4))
 (rule _PathMod_4 (seq ',' _PathMod_5))
 (rule _PathMod_5 (cleanup opt) (alt _empty INTEGER))
 (rule PathPrimary (alt iri 'a' _PathPrimary_1 _PathPrimary_2))
 (rule _PathPrimary_1 (seq '!' PathNegatedPropertySet))
 (rule _PathPrimary_2 (seq '(' Path ')'))
 (rule PathNegatedPropertySet (alt PathOneInPropertySet _PathNegatedPropertySet_1))
 (rule _PathNegatedPropertySet_1 (seq '(' _PathNegatedPropertySet_2 ')'))
 (rule _PathNegatedPropertySet_2 (cleanup opt) (alt _empty _PathNegatedPropertySet_3))
 (rule _PathNegatedPropertySet_3
  (seq PathOneInPropertySet _PathNegatedPropertySet_4))
 (rule _PathNegatedPropertySet_4 (cleanup star) (alt _empty _PathNegatedPropertySet_6))
 (rule _PathNegatedPropertySet_6
  (cleanup merge)
  (seq _PathNegatedPropertySet_5 _PathNegatedPropertySet_4))
 (rule _PathNegatedPropertySet_5 (seq '|' PathOneInPropertySet))
 (rule PathOneInPropertySet (alt iri 'a' _PathOneInPropertySet_1))
 (rule _PathOneInPropertySet_1 (seq '^' _PathOneInPropertySet_2))
 (rule _PathOneInPropertySet_2 (alt iri 'a'))
 (rule TriplesNode (alt Collection BlankNodePropertyList))
 (rule BlankNodePropertyList (seq '[' PropertyListNotEmpty ']'))
 (rule TriplesNodePath (alt CollectionPath BlankNodePropertyListPath))
 (rule BlankNodePropertyListPath (seq '[' PropertyListPathNotEmpty ']'))
 (rule Collection (seq '(' _Collection_1 ')'))
 (rule _Collection_1 (cleanup plus) (seq GraphNode _Collection_2))
 (rule _Collection_2 (cleanup star) (alt _empty _Collection_3))
 (rule _Collection_3 (cleanup merge) (seq GraphNode _Collection_2))
 (rule CollectionPath (seq '(' _CollectionPath_1 ')'))
 (rule _CollectionPath_1 (cleanup plus) (seq GraphNodePath _CollectionPath_2))
 (rule _CollectionPath_2 (cleanup star) (alt _empty _CollectionPath_3))
 (rule _CollectionPath_3 (cleanup merge) (seq GraphNodePath _CollectionPath_2))
 (rule AnnotationPath (cleanup star) (alt _empty _AnnotationPath_2))
 (rule _AnnotationPath_2 (cleanup merge) (seq _AnnotationPath_1 AnnotationPath))
 (rule _AnnotationPath_1 (alt Reifier AnnotationBlockPath))
 (rule AnnotationBlockPath (seq '{|' PropertyListPathNotEmpty '|}'))
 (rule Annotation (cleanup star) (alt _empty _Annotation_2))
 (rule _Annotation_2 (cleanup merge) (seq _Annotation_1 Annotation))
 (rule _Annotation_1 (alt Reifier AnnotationBlock))
 (rule AnnotationBlock (seq '{|' PropertyListNotEmpty '|}'))
 (rule GraphNode (alt VarOrTerm TriplesNode ReifiedTriple))
 (rule GraphNodePath (alt VarOrTerm TriplesNodePath ReifiedTriple))
 (rule VarOrTerm
  (alt Var iri RDFLiteral NumericLiteral BooleanLiteral BlankNode NIL TripleTerm))
 (rule ReifiedTriple
  (seq '<<' ReifiedTripleSubject Verb ReifiedTripleObject _ReifiedTriple_1 '>>'))
 (rule _ReifiedTriple_1 (cleanup opt) (alt _empty Reifier))
 (rule ReifiedTripleSubject
  (alt Var iri RDFLiteral NumericLiteral BooleanLiteral BlankNode ReifiedTriple
   TripleTerm ))
 (rule ReifiedTripleObject
  (alt Var iri RDFLiteral NumericLiteral BooleanLiteral BlankNode ReifiedTriple
   TripleTerm ))
 (rule TripleTerm (seq '<<(' TripleTermSubject Verb TripleTermObject ')>>'))
 (rule TripleTermSubject
  (alt Var iri RDFLiteral NumericLiteral BooleanLiteral BlankNode TripleTerm))
 (rule TripleTermObject
  (alt Var iri RDFLiteral NumericLiteral BooleanLiteral BlankNode TripleTerm))
 (rule TripleTermData
  (seq '<<(' TripleTermDataSubject _TripleTermData_1 TripleTermDataObject ')>>'))
 (rule _TripleTermData_1 (alt iri 'a'))
 (rule TripleTermDataSubject
  (alt iri RDFLiteral NumericLiteral BooleanLiteral TripleTermData))
 (rule TripleTermDataObject
  (alt iri RDFLiteral NumericLiteral BooleanLiteral TripleTermData))
 (rule VarOrIri (alt Var iri))
 (rule Var (alt VAR1 VAR2))
 (rule Expression (seq ConditionalOrExpression))
 (rule ConditionalOrExpression
  (seq ConditionalAndExpression _ConditionalOrExpression_1))
 (rule _ConditionalOrExpression_1
  (cleanup star)
  (alt _empty _ConditionalOrExpression_3))
 (rule _ConditionalOrExpression_3
  (cleanup merge)
  (seq _ConditionalOrExpression_2 _ConditionalOrExpression_1))
 (rule _ConditionalOrExpression_2 (seq '||' ConditionalAndExpression))
 (rule ConditionalAndExpression (seq ValueLogical _ConditionalAndExpression_1))
 (rule _ConditionalAndExpression_1
  (cleanup star)
  (alt _empty _ConditionalAndExpression_3))
 (rule _ConditionalAndExpression_3
  (cleanup merge)
  (seq _ConditionalAndExpression_2 _ConditionalAndExpression_1))
 (rule _ConditionalAndExpression_2 (seq '&&' ValueLogical))
 (rule ValueLogical (seq RelationalExpression))
 (rule RelationalExpression (seq NumericExpression _RelationalExpression_1))
 (rule _RelationalExpression_1 (cleanup opt) (alt _empty _RelationalExpression_2))
 (rule _RelationalExpression_2
  (alt _RelationalExpression_3 _RelationalExpression_4 _RelationalExpression_5
   _RelationalExpression_6 _RelationalExpression_7 _RelationalExpression_8
   _RelationalExpression_9 _RelationalExpression_10 ))
 (rule _RelationalExpression_3 (seq '=' NumericExpression))
 (rule _RelationalExpression_4 (seq '!=' NumericExpression))
 (rule _RelationalExpression_5 (seq '<' NumericExpression))
 (rule _RelationalExpression_6 (seq '>' NumericExpression))
 (rule _RelationalExpression_7 (seq '<=' NumericExpression))
 (rule _RelationalExpression_8 (seq '>=' NumericExpression))
 (rule _RelationalExpression_9 (seq 'IN' ExpressionList))
 (rule _RelationalExpression_10 (seq 'NOT' 'IN' ExpressionList))
 (rule NumericExpression (seq AdditiveExpression))
 (rule AdditiveExpression (seq MultiplicativeExpression _AdditiveExpression_1))
 (rule _AdditiveExpression_1 (cleanup star) (alt _empty _AdditiveExpression_3))
 (rule _AdditiveExpression_3
  (cleanup merge)
  (seq _AdditiveExpression_2 _AdditiveExpression_1))
 (rule _AdditiveExpression_2
  (alt _AdditiveExpression_4 _AdditiveExpression_5 _AdditiveExpression_6))
 (rule _AdditiveExpression_4 (seq '+' MultiplicativeExpression))
 (rule _AdditiveExpression_5 (seq '-' MultiplicativeExpression))
 (rule _AdditiveExpression_6 (seq _AdditiveExpression_7 _AdditiveExpression_8))
 (rule _AdditiveExpression_7 (alt NumericLiteralPositive NumericLiteralNegative))
 (rule _AdditiveExpression_8 (cleanup star) (alt _empty _AdditiveExpression_10))
 (rule _AdditiveExpression_10
  (cleanup merge)
  (seq _AdditiveExpression_9 _AdditiveExpression_8))
 (rule _AdditiveExpression_9 (alt _AdditiveExpression_11 _AdditiveExpression_12))
 (rule _AdditiveExpression_11 (seq '*' UnaryExpression))
 (rule _AdditiveExpression_12 (seq '/' UnaryExpression))
 (rule MultiplicativeExpression (seq UnaryExpression _MultiplicativeExpression_1))
 (rule _MultiplicativeExpression_1
  (cleanup star)
  (alt _empty _MultiplicativeExpression_3))
 (rule _MultiplicativeExpression_3
  (cleanup merge)
  (seq _MultiplicativeExpression_2 _MultiplicativeExpression_1))
 (rule _MultiplicativeExpression_2
  (alt _MultiplicativeExpression_4 _MultiplicativeExpression_5))
 (rule _MultiplicativeExpression_4 (seq '*' UnaryExpression))
 (rule _MultiplicativeExpression_5 (seq '/' UnaryExpression))
 (rule UnaryExpression
  (alt _UnaryExpression_1 _UnaryExpression_2 _UnaryExpression_3 PrimaryExpression))
 (rule _UnaryExpression_1 (seq '!' PrimaryExpression))
 (rule _UnaryExpression_2 (seq '+' PrimaryExpression))
 (rule _UnaryExpression_3 (seq '-' PrimaryExpression))
 (rule PrimaryExpression
  (alt BrackettedExpression BuiltInCall iriOrFunction RDFLiteral NumericLiteral
   BooleanLiteral Var ExprTripleTerm ))
 (rule ExprTripleTerm
  (seq '<<(' ExprTripleTermSubject Verb ExprTripleTermObject ')>>'))
 (rule ExprTripleTermSubject
  (alt iri RDFLiteral NumericLiteral BooleanLiteral Var ExprTripleTerm))
 (rule ExprTripleTermObject
  (alt iri RDFLiteral NumericLiteral BooleanLiteral Var ExprTripleTerm))
 (rule BrackettedExpression (seq '(' Expression ')'))
 (rule BuiltInCall
  (alt Aggregate _BuiltInCall_1 _BuiltInCall_2 _BuiltInCall_3 _BuiltInCall_4
   _BuiltInCall_5 _BuiltInCall_6 _BuiltInCall_7 _BuiltInCall_8 _BuiltInCall_9
   _BuiltInCall_10 _BuiltInCall_11 _BuiltInCall_12 _BuiltInCall_13
   _BuiltInCall_14 SubstringExpression _BuiltInCall_15 StrReplaceExpression
   _BuiltInCall_16 _BuiltInCall_17 _BuiltInCall_18 _BuiltInCall_19
   _BuiltInCall_20 _BuiltInCall_21 _BuiltInCall_22 _BuiltInCall_23
   _BuiltInCall_24 _BuiltInCall_25 _BuiltInCall_26 _BuiltInCall_27
   _BuiltInCall_28 _BuiltInCall_29 _BuiltInCall_30 _BuiltInCall_31
   _BuiltInCall_32 _BuiltInCall_33 _BuiltInCall_34 _BuiltInCall_35
   _BuiltInCall_36 _BuiltInCall_37 _BuiltInCall_38 _BuiltInCall_39
   _BuiltInCall_40 _BuiltInCall_41 _BuiltInCall_42 _BuiltInCall_43
   _BuiltInCall_44 _BuiltInCall_45 _BuiltInCall_46 _BuiltInCall_47
   _BuiltInCall_48 _BuiltInCall_49 _BuiltInCall_50 _BuiltInCall_51
   RegexExpression ExistsFunc NotExistsFunc _BuiltInCall_52 _BuiltInCall_53
   _BuiltInCall_54 _BuiltInCall_55 _BuiltInCall_56 ))
 (rule _BuiltInCall_1 (seq 'STR' '(' Expression ')'))
 (rule _BuiltInCall_2 (seq 'LANG' '(' Expression ')'))
 (rule _BuiltInCall_3 (seq 'LANGMATCHES' '(' Expression ',' Expression ')'))
 (rule _BuiltInCall_4 (seq 'DATATYPE' '(' Expression ')'))
 (rule _BuiltInCall_5 (seq 'BOUND' '(' Var ')'))
 (rule _BuiltInCall_6 (seq 'IRI' '(' Expression ')'))
 (rule _BuiltInCall_7 (seq 'URI' '(' Expression ')'))
 (rule _BuiltInCall_8 (seq 'BNODE' _BuiltInCall_57))
 (rule _BuiltInCall_57 (alt _BuiltInCall_58 NIL))
 (rule _BuiltInCall_58 (seq '(' Expression ')'))
 (rule _BuiltInCall_9 (seq 'RAND' NIL))
 (rule _BuiltInCall_10 (seq 'ABS' '(' Expression ')'))
 (rule _BuiltInCall_11 (seq 'CEIL' '(' Expression ')'))
 (rule _BuiltInCall_12 (seq 'FLOOR' '(' Expression ')'))
 (rule _BuiltInCall_13 (seq 'ROUND' '(' Expression ')'))
 (rule _BuiltInCall_14 (seq 'CONCAT' ExpressionList))
 (rule _BuiltInCall_15 (seq 'STRLEN' '(' Expression ')'))
 (rule _BuiltInCall_16 (seq 'UCASE' '(' Expression ')'))
 (rule _BuiltInCall_17 (seq 'LCASE' '(' Expression ')'))
 (rule _BuiltInCall_18 (seq 'ENCODE_FOR_URI' '(' Expression ')'))
 (rule _BuiltInCall_19 (seq 'CONTAINS' '(' Expression ',' Expression ')'))
 (rule _BuiltInCall_20 (seq 'STRSTARTS' '(' Expression ',' Expression ')'))
 (rule _BuiltInCall_21 (seq 'STRENDS' '(' Expression ',' Expression ')'))
 (rule _BuiltInCall_22 (seq 'STRBEFORE' '(' Expression ',' Expression ')'))
 (rule _BuiltInCall_23 (seq 'STRAFTER' '(' Expression ',' Expression ')'))
 (rule _BuiltInCall_24 (seq 'YEAR' '(' Expression ')'))
 (rule _BuiltInCall_25 (seq 'MONTH' '(' Expression ')'))
 (rule _BuiltInCall_26 (seq 'DAY' '(' Expression ')'))
 (rule _BuiltInCall_27 (seq 'HOURS' '(' Expression ')'))
 (rule _BuiltInCall_28 (seq 'MINUTES' '(' Expression ')'))
 (rule _BuiltInCall_29 (seq 'SECONDS' '(' Expression ')'))
 (rule _BuiltInCall_30 (seq 'TIMEZONE' '(' Expression ')'))
 (rule _BuiltInCall_31 (seq 'TZ' '(' Expression ')'))
 (rule _BuiltInCall_32 (seq 'NOW' NIL))
 (rule _BuiltInCall_33 (seq 'UUID' NIL))
 (rule _BuiltInCall_34 (seq 'STRUUID' NIL))
 (rule _BuiltInCall_35 (seq 'MD5' '(' Expression ')'))
 (rule _BuiltInCall_36 (seq 'SHA1' '(' Expression ')'))
 (rule _BuiltInCall_37 (seq 'SHA224' '(' Expression ')'))
 (rule _BuiltInCall_38 (seq 'SHA256' '(' Expression ')'))
 (rule _BuiltInCall_39 (seq 'SHA384' '(' Expression ')'))
 (rule _BuiltInCall_40 (seq 'SHA512' '(' Expression ')'))
 (rule _BuiltInCall_41 (seq 'COALESCE' ExpressionList))
 (rule _BuiltInCall_42 (seq 'IF' '(' Expression ',' Expression ',' Expression ')'))
 (rule _BuiltInCall_43 (seq 'STRLANG' '(' Expression ',' Expression ')'))
 (rule _BuiltInCall_44 (seq 'STRDT' '(' Expression ',' Expression ')'))
 (rule _BuiltInCall_45 (seq 'sameTerm' '(' Expression ',' Expression ')'))
 (rule _BuiltInCall_46 (seq 'isIRI' '(' Expression ')'))
 (rule _BuiltInCall_47 (seq 'isURI' '(' Expression ')'))
 (rule _BuiltInCall_48 (seq 'isBLANK' '(' Expression ')'))
 (rule _BuiltInCall_49 (seq 'isLITERAL' '(' Expression ')'))
 (rule _BuiltInCall_50 (seq 'isNUMERIC' '(' Expression ')'))
 (rule _BuiltInCall_51 (seq 'ADJUST' '(' Expression ',' Expression ')'))
 (rule _BuiltInCall_52 (seq 'isTRIPLE' '(' Expression ')'))
 (rule _BuiltInCall_53
  (seq 'TRIPLE' '(' Expression ',' Expression ',' Expression ')'))
 (rule _BuiltInCall_54 (seq 'SUBJECT' '(' Expression ')'))
 (rule _BuiltInCall_55 (seq 'PREDICATE' '(' Expression ')'))
 (rule _BuiltInCall_56 (seq 'OBJECT' '(' Expression ')'))
 (rule RegexExpression
  (seq 'REGEX' '(' Expression ',' Expression _RegexExpression_1 ')'))
 (rule _RegexExpression_1 (cleanup opt) (alt _empty _RegexExpression_2))
 (rule _RegexExpression_2 (seq ',' Expression))
 (rule SubstringExpression
  (seq 'SUBSTR' '(' Expression ',' Expression _SubstringExpression_1 ')'))
 (rule _SubstringExpression_1 (cleanup opt) (alt _empty _SubstringExpression_2))
 (rule _SubstringExpression_2 (seq ',' Expression))
 (rule StrReplaceExpression
  (seq 'REPLACE' '(' Expression ',' Expression ',' Expression
   _StrReplaceExpression_1 ')' ))
 (rule _StrReplaceExpression_1 (cleanup opt) (alt _empty _StrReplaceExpression_2))
 (rule _StrReplaceExpression_2 (seq ',' Expression))
 (rule ExistsFunc (seq 'EXISTS' GroupGraphPattern))
 (rule NotExistsFunc (seq 'NOT' 'EXISTS' GroupGraphPattern))
 (rule Aggregate
  (alt _Aggregate_1 _Aggregate_2 _Aggregate_3 _Aggregate_4 _Aggregate_5
   _Aggregate_6 _Aggregate_7 ))
 (rule _Aggregate_1 (seq 'COUNT' '(' _Aggregate_8 _Aggregate_9 ')'))
 (rule _Aggregate_8 (cleanup opt) (alt _empty 'DISTINCT'))
 (rule _Aggregate_9 (alt '*' Expression))
 (rule _Aggregate_2 (seq 'SUM' '(' _Aggregate_10 Expression ')'))
 (rule _Aggregate_10 (cleanup opt) (alt _empty 'DISTINCT'))
 (rule _Aggregate_3 (seq 'MIN' '(' _Aggregate_11 Expression ')'))
 (rule _Aggregate_11 (cleanup opt) (alt _empty 'DISTINCT'))
 (rule _Aggregate_4 (seq 'MAX' '(' _Aggregate_12 Expression ')'))
 (rule _Aggregate_12 (cleanup opt) (alt _empty 'DISTINCT'))
 (rule _Aggregate_5 (seq 'AVG' '(' _Aggregate_13 Expression ')'))
 (rule _Aggregate_13 (cleanup opt) (alt _empty 'DISTINCT'))
 (rule _Aggregate_6 (seq 'SAMPLE' '(' _Aggregate_14 Expression ')'))
 (rule _Aggregate_14 (cleanup opt) (alt _empty 'DISTINCT'))
 (rule _Aggregate_7
  (seq 'GROUP_CONCAT' '(' _Aggregate_15 Expression _Aggregate_16 ')'))
 (rule _Aggregate_15 (cleanup opt) (alt _empty 'DISTINCT'))
 (rule _Aggregate_16 (cleanup opt) (alt _empty _Aggregate_17))
 (rule _Aggregate_17 (seq ';' 'SEPARATOR' '=' String))
 (rule iriOrFunction (seq iri _iriOrFunction_1))
 (rule _iriOrFunction_1 (cleanup opt) (alt _empty ArgList))
 (rule RDFLiteral (seq String _RDFLiteral_1))
 (rule _RDFLiteral_1 (cleanup opt) (alt _empty _RDFLiteral_2))
 (rule _RDFLiteral_2 (alt LANG_DIR _RDFLiteral_3))
 (rule _RDFLiteral_3 (seq '^^' iri))
 (rule NumericLiteral
  (alt NumericLiteralUnsigned NumericLiteralPositive NumericLiteralNegative))
 (rule NumericLiteralUnsigned (alt DOUBLE DECIMAL INTEGER))
 (rule NumericLiteralPositive
  (alt DOUBLE_POSITIVE DECIMAL_POSITIVE INTEGER_POSITIVE))
 (rule NumericLiteralNegative
  (alt DOUBLE_NEGATIVE DECIMAL_NEGATIVE INTEGER_NEGATIVE))
 (rule BooleanLiteral (alt 'true' 'false'))
 (rule String
  (alt STRING_LITERAL_LONG1 STRING_LITERAL_LONG2 STRING_LITERAL1 STRING_LITERAL2))
 (rule iri (alt IRIREF PrefixedName))
 (rule PrefixedName (alt PNAME_LN PNAME_NS))
 (rule BlankNode (alt BLANK_NODE_LABEL ANON))
 (terminals _terminals (seq))
 (terminal IRIREF (seq '<' (star (diff (range "^<>\"{}|^`\\") (range "#x00-#x20"))) '>'))
 (terminal PNAME_NS (seq (opt PN_PREFIX) ':'))
 (terminal PNAME_LN (seq PNAME_NS PN_LOCAL))
 (terminal BLANK_NODE_LABEL
  (seq '_:' (alt PN_CHARS_U (range "0-9")) (opt (seq (star (alt PN_CHARS '.')) PN_CHARS))))
 (terminal VAR1 (seq '?' VARNAME))
 (terminal VAR2 (seq '$' VARNAME))
 (terminal LANG_DIR
  (seq '@'
   (plus (range "a-zA-Z"))
   (star (seq '-' (plus (range "a-zA-Z0-9"))))
   (opt (seq '--' (plus (range "a-zA-Z"))))) )
 (terminal INTEGER (plus (range "0-9")))
 (terminal DECIMAL (seq (star (range "0-9")) '.' (plus (range "0-9"))))
 (terminal DOUBLE
  (alt
   (seq (plus (range "0-9")) '.' (star (range "0-9")) EXPONENT)
   (seq '.' (plus (range "0-9")) EXPONENT)
   (seq (plus (range "0-9")) EXPONENT)) )
 (terminal INTEGER_POSITIVE (seq '+' INTEGER))
 (terminal DECIMAL_POSITIVE (seq '+' DECIMAL))
 (terminal DOUBLE_POSITIVE (seq '+' DOUBLE))
 (terminal INTEGER_NEGATIVE (seq '-' INTEGER))
 (terminal DECIMAL_NEGATIVE (seq '-' DECIMAL))
 (terminal DOUBLE_NEGATIVE (seq '-' DOUBLE))
 (terminal EXPONENT (seq (range "eE") (opt (range "+-")) (plus (range "0-9"))))
 (terminal STRING_LITERAL1 (seq "'" (star (alt (range "^#x27#x5C#xA#xD") ECHAR)) "'"))
 (terminal STRING_LITERAL2 (seq '"' (star (alt (range "^#x22#x5C#xA#xD") ECHAR)) '"'))
 (terminal STRING_LITERAL_LONG1
  (seq "'''" (star (seq (opt (alt "'" "''")) (alt (range "^'\\") ECHAR))) "'''"))
 (terminal STRING_LITERAL_LONG2
  (seq '"""' (star (seq (opt (alt '"' '""')) (alt (range "^\"\\") ECHAR))) '"""'))
 (terminal ECHAR (seq '\\' (range "tbnrf\\\"'")))
 (terminal NIL (seq '(' (star WS) ')'))
 (terminal WS (alt (hex "#x20") (hex "#x9") (hex "#xD") (hex "#xA")))
 (terminal ANON (seq '[' (star WS) ']'))
 (terminal PN_CHARS_BASE
  (alt
   (range "A-Z")
   (range "a-z")
   (range "#x00C0-#x00D6")
   (range "#x00D8-#x00F6")
   (range "#x00F8-#x02FF")
   (range "#x0370-#x037D")
   (range "#x037F-#x1FFF")
   (range "#x200C-#x200D")
   (range "#x2070-#x218F")
   (range "#x2C00-#x2FEF")
   (range "#x3001-#xD7FF")
   (range "#xF900-#xFDCF")
   (range "#xFDF0-#xFFFD")
   (range "#x10000-#xEFFFF")) )
 (terminal PN_CHARS_U (alt PN_CHARS_BASE '_'))
 (terminal VARNAME
  (seq
   (alt PN_CHARS_U (range "0-9"))
   (star
    (alt PN_CHARS_U
     (range "0-9")
     (hex "#x00B7")
     (range "#x0300-#x036F")
     (range "#x203F-#x2040")) )) )
 (terminal PN_CHARS
  (alt PN_CHARS_U '-'
   (range "0-9")
   (hex "#x00B7")
   (range "#x0300-#x036F")
   (range "#x203F-#x2040")) )
 (terminal PN_PREFIX (seq PN_CHARS_BASE (opt (seq (star (alt PN_CHARS '.')) PN_CHARS))))
 (terminal PN_LOCAL
  (seq
   (alt PN_CHARS_U ':' (range "0-9") PLX)
   (opt (seq (star (alt PN_CHARS '.' ':' PLX)) (alt PN_CHARS ':' PLX)))) )
 (terminal PLX (alt PERCENT PN_LOCAL_ESC))
 (terminal PERCENT (seq '%' HEX HEX))
 (terminal HEX (alt (range "0-9") (range "A-F") (range "a-f")))
 (terminal PN_LOCAL_ESC
  (seq '\\'
   (alt '_' '~' '.' '-' '!' '$' '&' "'" '(' ')' '*' '+' ',' ';' '=' '/' '?' '#'
    '@' '%' )) ))
